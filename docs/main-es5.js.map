{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/config/snackbar.config.ts","webpack:///src/app/core/config/validation.config.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/interceptors/auth-interceptor.service.ts","webpack:///src/app/core/services/api.service.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/core/services/recipes.service.ts","webpack:///src/app/core/store/auth/auth.actions.ts","webpack:///src/app/core/store/auth/auth.effects.ts","webpack:///src/app/core/store/auth/auth.reducer.ts","webpack:///src/app/core/store/auth/auth.selectors.ts","webpack:///src/app/core/store/index.ts","webpack:///src/app/core/store/recipes/recipes.actions.ts","webpack:///src/app/core/store/recipes/recipes.effects.ts","webpack:///src/app/core/store/recipes/recipes.reducer.ts","webpack:///src/app/core/store/recipes/recipes.selectors.ts","webpack:///src/app/core/utility/is-not-undefined.ts","webpack:///src/app/core/utility/is-null-or-undefined.ts","webpack:///src/app/core/utility/is-undefined.ts","webpack:///src/app/core/utility/parse-to-recipe-tiles.ts","webpack:///src/app/features/add-recipe/add-recipe.component.ts","webpack:///src/app/features/add-recipe/add-recipe.component.html","webpack:///src/app/features/auth/sign-in/sign-in.component.ts","webpack:///src/app/features/auth/sign-in/sign-in.component.html","webpack:///src/app/features/auth/sign-up/sign-up.component.ts","webpack:///src/app/features/auth/sign-up/sign-up.component.html","webpack:///src/app/features/features-routing.module.ts","webpack:///src/app/features/features.module.ts","webpack:///src/app/features/home/home.component.ts","webpack:///src/app/features/home/home.component.html","webpack:///src/app/features/personal-recipes/personal-recipes.component.html","webpack:///src/app/features/personal-recipes/personal-recipes.component.ts","webpack:///src/app/features/recipe-details/recipe-details.component.html","webpack:///src/app/features/recipe-details/recipe-details.component.ts","webpack:///src/app/features/recipe-details/recipe-image/recipe-image.component.ts","webpack:///src/app/features/recipe-details/recipe-image/recipe-image.component.html","webpack:///src/app/features/recipe-list/recipe-list.component.ts","webpack:///src/app/features/recipe-list/recipe-list.component.html","webpack:///src/app/shared/components/adblock-notification-dialog/adblock-notification-dialog.component.ts","webpack:///src/app/shared/components/adblock-notification-dialog/adblock-notification-dialog.component.html","webpack:///src/app/shared/components/base-feature-wrapper/base-feature-wrapper.component.ts","webpack:///src/app/shared/components/base-feature-wrapper/base-feature-wrapper.component.html","webpack:///src/app/shared/components/button/button.component.ts","webpack:///src/app/shared/components/button/button.component.html","webpack:///src/app/shared/components/card/card.component.ts","webpack:///src/app/shared/components/card/card.component.html","webpack:///src/app/shared/components/header/header.component.ts","webpack:///src/app/shared/components/header/header.component.html","webpack:///src/app/shared/components/image-upload/image-upload.component.ts","webpack:///src/app/shared/components/image-upload/image-upload.component.html","webpack:///src/app/shared/components/input/input.component.ts","webpack:///src/app/shared/components/input/input.component.html","webpack:///src/app/shared/components/recipe-tile/recipe-tile.component.ts","webpack:///src/app/shared/components/recipe-tile/recipe-tile.component.html","webpack:///src/app/shared/components/select/select.component.ts","webpack:///src/app/shared/components/select/select.component.html","webpack:///src/app/shared/components/text-area/text-area.component.ts","webpack:///src/app/shared/components/text-area/text-area.component.html","webpack:///src/app/shared/components/validation-feedback/validation-feedback.component.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/services/snackbar.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","FeaturesModule","AppRoutingModule","forRoot","imports","AppComponent","dialog","title","isAdBlockerDetected","pipe","subscribe","openAdblockDialog","open","disableClose","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LOGGED","type","message","AUTHENTICATED","NOT_AUTHENTICATED","REGISTERED","LOGIN_ERROR","REGISTER_ERROR","RECIPE_ADDED","RECIPE_ADD_ERROR","VALIDATION_CONFIG","required","email","password_match","taken_email","pattern","minlength","maxlength","CoreModule","AuthInterceptorService","authService","next","headers","get","handle","getAuthorizedRequest","err","_","status","clone","setHeaders","AuthToken","token","providedIn","ApiService","http","options","skipInterception","skip","params","queryParams","API_URL","formatErrors","body","formData","post","error","AuthService","apiService","cookieService","AUTH_PREFIX_PATH","password","payload","displayName","RecipesService","recipe","image","FormData","append","Object","entries","forEach","key","value","Array","isArray","JSON","stringify","recipes","map","createdAt","Date","SignIn","SignInSuccess","SignInFailure","Register","RegisterSuccess","RegisterFailure","TokenValidation","TokenValidationSuccess","TokenValidationFailure","Logout","AuthEffects","actions$","snackbarService","signIn","Boolean","tokenCredentials","set","accessToken","userWithCredentials","user","register","checkStatus","logout","dispatch","initialState","isAuthenticated","errorMessage","authProcessing","authReducerInternal","state","authReducer","action","selectUser","auth","selectAuthProcessing","selectIsAuthenticated","selectAuthState","authState","appReducer","appEffects","CreateRecipe","CreateRecipeSuccess","CreateRecipeFailure","GetAllRecipes","GetAllRecipesSuccess","GetAllRecipesFailure","GetLatestRecipes","GetLatestRecipesSuccess","GetLatestRecipesFailure","GetPersonalRecipes","GetPersonalRecipesSuccess","GetPersonalRecipesFailure","GetDetailedRecipe","GetDetailedRecipeSuccess","GetDetailedRecipeFailure","RecipesEffects","recipesService","router","create","navigate","getAll","getLatest","getPersonalRecipes","userId","getDetailedRecipe","findById","myRecipes","allRecipes","latestRecipes","detailedRecipe","personalRecipes","recipesProcessing","recipesReducerInternal","sort","firstRecipe","secondRecipe","getTime","slice","filter","recipesReducer","RecipesFeature","selectLatestRecipes","recipeState","selectRecipesProcessing","selectAllRecipes","selectPersonalRecipes","selectDetailedRecipes","isNotUndefined","isNil","isUndefined","parseToRecipeTiles","authorName","time","name","photoUrl","AddRecipeComponent","fb","store","timeOptions","createRecipeProcessing$","select","initializeForm","addRecipeForm","controls","group","maxLength","description","preparingSteps","array","createPreparingStepControl","file","control","abstractControl","push","removeAt","length","onImageChanged","submit","SignInComponent","authState$","isProcessing","initializeAuthSubscription","signInForm","minLength","updateOn","reset","navigateByUrl","handleLogin","SignUpComponent","signUpForm","handleRegistration","component","redirectTo","FeaturesRoutingModule","forChild","provide","useClass","multi","forFeature","adClient","adSlot","adtest","HomeComponent","latestRecipes$","PersonalRecipesComponent","recipes$","recipeWithoutAuthorName","RecipeDetailsComponent","activatedRoute","recipe$","parsePreparingSteps","RecipeImageComponent","RecipeListComponent","AdblockNotificationDialogComponent","BaseFeatureWrapperComponent","ButtonComponent","isDisabled","secondary","onClick","emit","clicked","CardComponent","HeaderComponent","user$","authProcessing$","ImageUploadComponent","fileName","fileEmitter","event","target","files","reader","FileReader","readAsDataURL","onload","imageSrc","result","onImageSelected","InputComponent","onEnter","_type","hide","onKeyup","RecipeTileComponent","recipeTile","SelectComponent","TextAreaComponent","rows","ValidationFeedbackComponent","config","property","errors","hasOwnProperty","template","MaterialComponents","MaterialModule","SnackBarService","snackBar","duration","horizontalPosition","verticalPosition","panelClass","SharedModule","environment","production","ad_client","ad_slot","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./features/features.module').then((m) => m.FeaturesModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { detectAnyAdblocker } from 'just-detect-adblock';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { from } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AdblockNotificationDialogComponent } from './shared/components/adblock-notification-dialog/adblock-notification-dialog.component';\nimport { filter } from 'rxjs/operators';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'AdRecipes';\n\n  isAdBlockerDetected = false;\n\n  constructor(public dialog: MatDialog) {}\n\n  ngOnInit(): void {\n    from(detectAnyAdblocker())\n      .pipe(\n        untilDestroyed(this),\n        filter((isAdBlockerDetected) => !!isAdBlockerDetected)\n      )\n      .subscribe(() => {\n        this.isAdBlockerDetected = true;\n        this.openAdblockDialog();\n      });\n  }\n\n  private openAdblockDialog(): void {\n    this.dialog.open(AdblockNotificationDialogComponent, {\n      disableClose: true,\n    });\n  }\n}\n","<div [ngClass]='isAdBlockerDetected ? \"blurred-and-blocked\" : \"\"'>\r\n  <app-header></app-header>\r\n  <div class='container'>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FeaturesModule } from './features/features.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { SharedModule } from './shared/shared.module';\nimport { AdsenseModule } from 'ng2-adsense';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    SharedModule,\n    FeaturesModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export const LOGGED = {\n  type: 'Success',\n  message: 'Successfully logged in',\n};\n\nexport const AUTHENTICATED = {\n  type: 'Success',\n  message: 'Authenticated',\n};\n\nexport const NOT_AUTHENTICATED = {\n  type: 'Error',\n  message: 'Failed to authenticate',\n};\n\nexport const REGISTERED = {\n  type: 'Success',\n  message: 'Successfully registered',\n};\n\nexport const LOGIN_ERROR = {\n  type: 'Error',\n  message: 'Failed to log in',\n};\n\nexport const REGISTER_ERROR = {\n  type: 'Error',\n  message: 'Failed to register',\n};\n\nexport const RECIPE_ADDED = {\n  type: 'Success',\n  message: 'Recipe has been added',\n};\n\nexport const RECIPE_ADD_ERROR = {\n  type: 'Error',\n  message: 'Recipe add failure',\n};\n","export const VALIDATION_CONFIG = {\n  required: 'Field is required',\n  email: 'Incorrect e-mail',\n  password_match: 'Password must match',\n  taken_email: 'E-mail is taken',\n  pattern: 'Invalid data',\n  minlength: 'Minimal length is 4',\n  maxlength: 'The maximum length has been exceeded',\n};\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ApiService } from './services/api.service';\nimport { AuthService } from './services/auth.service';\nimport { RecipesService } from './services/recipes.service';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ApiService, AuthService, RecipesService],\n})\nexport class CoreModule {}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthInterceptorService<T extends unknown> {\n  intercept(req: HttpRequest<T>, next: HttpHandler): Observable<HttpEvent<T>> {\n    return req.headers.get('skip') || req.headers.get('AuthToken')\n      ? next.handle(req)\n      : next.handle(this.getAuthorizedRequest(req)).pipe(\n          catchError((err, _) => {\n            if (err instanceof HttpErrorResponse && err.status === 401) {\n              return of(null);\n            }\n\n            return throwError(err);\n          })\n        );\n  }\n\n  getAuthorizedRequest(req: HttpRequest<T>) {\n    return req.clone({\n      setHeaders: {\n        AuthToken: this.authService.token,\n      },\n    });\n  }\n\n  constructor(private authService: AuthService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpGetMethodOptions,\n  HttpPostMethodOptions,\n} from '../models/HttpMethods.model';\n\n@Injectable()\nexport class ApiService<T> {\n  constructor(private http: HttpClient) {}\n\n  private static formatErrors(error: any) {\n    return throwError(error.error);\n  }\n\n  get(path: string, options?: HttpGetMethodOptions): Observable<T> {\n    const headers = options?.skipInterception && { headers: { skip: 'true' } };\n    const params = options?.queryParams && { params: options.queryParams };\n\n    return this.http\n      .get<T>(`${environment.API_URL}${path}`, {\n        ...params,\n        ...headers,\n      })\n      .pipe(catchError(ApiService.formatErrors));\n  }\n\n  post(path: string, options?: HttpPostMethodOptions<T>): Observable<T> {\n    const headers = options?.skipInterception && { headers: { skip: 'true' } };\n    const body = options.body ? { ...options.body } : options.formData;\n\n    return this.http\n      .post<T>(`${environment.API_URL}${path}`, body, headers)\n      .pipe(catchError(ApiService.formatErrors));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { User, UserWithCredentials } from '../models/user.model';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpPostMethodOptions } from '../models/HttpMethods.model';\n\n@Injectable()\nexport class AuthService {\n  private static readonly AUTH_PREFIX_PATH = 'auth';\n\n  constructor(\n    private apiService: ApiService<User>,\n    private cookieService: CookieService\n  ) {}\n\n  get token(): string {\n    return this.cookieService.get('token');\n  }\n\n  checkStatus(): Observable<User> {\n    return this.apiService.get(`${AuthService.AUTH_PREFIX_PATH}/me`);\n  }\n\n  signIn(\n    email: string,\n    password: string\n  ): Observable<User | UserWithCredentials> {\n    const payload: HttpPostMethodOptions<User> = {\n      skipInterception: true,\n      body: {\n        email,\n        password,\n      },\n    };\n    return this.apiService.post(\n      `${AuthService.AUTH_PREFIX_PATH}/sign-in`,\n      payload\n    );\n  }\n\n  register(\n    email: string,\n    password: string,\n    displayName: string\n  ): Observable<User | UserWithCredentials> {\n    const payload: HttpPostMethodOptions<User> = {\n      skipInterception: true,\n      body: {\n        email,\n        password,\n        displayName,\n      },\n    };\n\n    return this.apiService.post(\n      `${AuthService.AUTH_PREFIX_PATH}/register`,\n      payload\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Observable } from 'rxjs';\nimport { HttpPostMethodOptions } from '../models/HttpMethods.model';\nimport { Recipe, RecipeEntry } from '../models/recipes.model';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class RecipesService {\n  constructor(private apiService: ApiService<Recipe | unknown>) {}\n\n  create(\n    recipe: RecipeEntry,\n    image: Blob | File\n  ): Observable<Recipe | unknown> {\n    const formData = new FormData();\n    formData.append('image', image);\n\n    Object.entries(recipe).forEach(([key, value]) =>\n      formData.append(key, Array.isArray(value) ? JSON.stringify(value) : value)\n    );\n\n    const payload: HttpPostMethodOptions<Recipe | unknown> = {\n      formData,\n    };\n\n    return this.apiService.post(`recipes`, payload) as Observable<Recipe>;\n  }\n\n  get(): Observable<Recipe[] | unknown> {\n    return this.apiService.get(`recipes`).pipe(\n      map((recipes: Recipe[]) =>\n        recipes.map((recipe) => ({\n          ...recipe,\n          createdAt: new Date(recipe.createdAt),\n        }))\n      )\n    );\n  }\n\n  findById(id: string): Observable<Recipe | unknown> {\n    return this.apiService.get(`recipes/${id}`).pipe(\n      map((recipe: Recipe) => ({\n        ...recipe,\n        createdAt: new Date(recipe.createdAt),\n      }))\n    );\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { User, UserWithCredentials } from '../../models/user.model';\nimport {\n  RegisterCredentials,\n  SignInCredentials,\n} from '../../models/auth.model';\n\nexport const SignIn = createAction(\n  '[Auth] Sign In',\n  props<{ payload: SignInCredentials }>()\n);\n\nexport const SignInSuccess = createAction(\n  '[Auth] Sign In Success',\n  props<{ user: UserWithCredentials }>()\n);\n\nexport const SignInFailure = createAction(\n  '[Auth] Sign In Failure',\n  props<{ error: unknown }>()\n);\n\nexport const Register = createAction(\n  '[Auth] Register',\n  props<{ payload: RegisterCredentials }>()\n);\n\nexport const RegisterSuccess = createAction(\n  '[Auth] Register Success',\n  props<{ user: UserWithCredentials }>()\n);\n\nexport const RegisterFailure = createAction(\n  '[Auth] Register Failure',\n  props<{ error: unknown }>()\n);\n\nexport const TokenValidation = createAction('[Auth] Validate token');\n\nexport const TokenValidationSuccess = createAction(\n  '[Auth] Token Validation Success',\n  props<{ user: User }>()\n);\n\nexport const TokenValidationFailure = createAction(\n  '[Auth] Token Validation Failure',\n  props<{ error: unknown }>()\n);\n\nexport const Logout = createAction('[Auth] Logout');\n","import { Observable, of } from 'rxjs';\nimport {\n  Logout,\n  Register,\n  RegisterFailure,\n  RegisterSuccess,\n  SignIn,\n  SignInFailure,\n  SignInSuccess,\n  TokenValidation,\n  TokenValidationFailure,\n  TokenValidationSuccess,\n} from './auth.actions';\nimport { AuthService } from '../../services/auth.service';\nimport { User, UserWithCredentials } from '../../models/user.model';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, filter, map, switchMap, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport {\n  AUTHENTICATED,\n  LOGIN_ERROR,\n  NOT_AUTHENTICATED,\n  REGISTER_ERROR,\n} from '../../config/snackbar.config';\nimport { SnackBarService } from '../../../shared/services/snackbar.service';\nimport { SignInCredentials } from '../../../../../api/src/features/auth/auth.model';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport { RegisterCredentials } from '../../models/auth.model';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private actions$: Actions,\n    private snackbarService: SnackBarService,\n    private cookieService: CookieService\n  ) {}\n\n  signIn: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(SignIn),\n      map(({ payload }) => payload),\n      filter(Boolean),\n      switchMap(({ email, password }: SignInCredentials) => {\n        return this.authService.signIn(email, password).pipe(\n          tap(({ tokenCredentials, id }: UserWithCredentials) => {\n            this.cookieService.set('userId', id);\n            this.cookieService.set('token', tokenCredentials.accessToken);\n          }),\n          map((userWithCredentials: UserWithCredentials) =>\n            SignInSuccess({ user: userWithCredentials })\n          ),\n          catchError((error) => {\n            this.snackbarService.open(LOGIN_ERROR);\n            return of(SignInFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  register: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(Register),\n      map(({ payload }) => payload),\n      filter(Boolean),\n      switchMap(({ email, password, displayName }: RegisterCredentials) => {\n        return this.authService.register(email, password, displayName).pipe(\n          tap(({ tokenCredentials, id }: UserWithCredentials) => {\n            this.cookieService.set('userId', id);\n            this.cookieService.set('token', tokenCredentials.accessToken);\n          }),\n          map((userWithCredentials: UserWithCredentials) =>\n            RegisterSuccess({ user: userWithCredentials })\n          ),\n          catchError((error) => {\n            this.snackbarService.open(REGISTER_ERROR);\n            return of(RegisterFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  checkStatus: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(TokenValidation),\n      filter(Boolean),\n      switchMap(() => {\n        return this.authService.checkStatus().pipe(\n          map((user: User) => {\n            this.snackbarService.open(AUTHENTICATED);\n            return TokenValidationSuccess({ user });\n          }),\n          catchError((error) => {\n            this.snackbarService.open(NOT_AUTHENTICATED);\n            this.cookieService.delete('token');\n            this.cookieService.delete('userId');\n            return of(TokenValidationFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  logout = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(Logout),\n        filter(Boolean),\n        tap(() => this.cookieService.delete('token'))\n      ),\n    { dispatch: false }\n  );\n}\n","import { User, UserWithCredentials } from '../../models/user.model';\nimport { createReducer, on } from '@ngrx/store';\nimport {\n  Register,\n  RegisterFailure,\n  RegisterSuccess,\n  SignIn,\n  SignInFailure,\n  SignInSuccess,\n  TokenValidationSuccess,\n  TokenValidation,\n  Logout,\n} from './auth.actions';\n\nexport interface AuthState {\n  isAuthenticated: boolean;\n  user: UserWithCredentials | User | null;\n  errorMessage: string | null;\n  authProcessing: boolean;\n}\n\nexport const initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n  errorMessage: null,\n  authProcessing: false,\n};\n\nconst authReducerInternal = createReducer(\n  initialState,\n  on(SignIn, Register, (state) => {\n    return { ...state, authProcessing: true };\n  }),\n  on(SignInSuccess, RegisterSuccess, (state, { user }) => {\n    return { ...state, user, isAuthenticated: true, authProcessing: false };\n  }),\n  on(SignInFailure, RegisterFailure, (state, { error }) => {\n    return {\n      ...state,\n      errorMessage: error,\n      isAuthenticated: false,\n      authProcessing: false,\n    };\n  }),\n  on(TokenValidation, Register, (state) => {\n    return { ...state, authProcessing: true };\n  }),\n  on(TokenValidationSuccess, (state, { user }) => {\n    return { ...state, user, isAuthenticated: true, authProcessing: false };\n  }),\n  on(Logout, () => initialState)\n);\n\nexport function authReducer(state, action) {\n  return authReducerInternal(state, action);\n}\n// on(authActions.SignIn, null, null, (state) => {\n//   return { ...state, authProcessing: true };\n// }),\n","import { RootState } from '../root.state';\nimport { createSelector } from '@ngrx/store';\n\nexport const selectUser = createSelector(\n  (state: RootState) => state.auth.user,\n  (user) => user\n);\n\nexport const selectAuthProcessing = createSelector(\n  (state: RootState) => state.auth.authProcessing,\n  (authProcessing) => authProcessing\n);\n\nexport const selectIsAuthenticated = createSelector(\n  (state: RootState) => state.auth.isAuthenticated,\n  (isAuthenticated) => isAuthenticated\n);\n\nexport const selectAuthState = createSelector(\n  (state: RootState) => state.auth,\n  (authState) => authState\n);\n","import { authReducer } from './auth/auth.reducer';\nimport { AuthEffects } from './auth/auth.effects';\nimport { RecipesEffects } from './recipes/recipes.effects';\nimport { recipesReducer } from './recipes/recipes.reducer';\n\nexport const appReducer = {\n  auth: authReducer,\n  recipe: recipesReducer,\n};\n\nexport const appEffects = [AuthEffects, RecipesEffects];\n","import { createAction, props } from '@ngrx/store';\nimport { Recipe, RecipeEntry } from '../../models/recipes.model';\n\nexport const CreateRecipe = createAction(\n  '[Recipe] Create',\n  props<{ payload: RecipeEntry }>()\n);\n\nexport const CreateRecipeSuccess = createAction(\n  '[Recipe] Create Success',\n  props<{ recipe: Recipe }>()\n);\n\nexport const CreateRecipeFailure = createAction(\n  '[Recipe] Create Failure',\n  props<{ error: unknown }>()\n);\n\nexport const GetAllRecipes = createAction('[Recipe] Get All Recipes');\n\nexport const GetAllRecipesSuccess = createAction(\n  '[Recipe] Get All Recipes Success',\n  props<{ recipes: Recipe[] }>()\n);\n\nexport const GetAllRecipesFailure = createAction(\n  '[Recipe] Get All Recipes Failure',\n  props<{ error: unknown }>()\n);\n\nexport const GetLatestRecipes = createAction('[Recipe] Get Latest Recipes');\n\nexport const GetLatestRecipesSuccess = createAction(\n  '[Recipe] Get Latest Recipes Success',\n  props<{ recipes: Recipe[] }>()\n);\n\nexport const GetLatestRecipesFailure = createAction(\n  '[Recipe] Get Latest Recipes Failure',\n  props<{ error: unknown }>()\n);\n\nexport const GetPersonalRecipes = createAction('[Recipe] Get Personal Recipes');\n\nexport const GetPersonalRecipesSuccess = createAction(\n  '[Recipe] Get Personal Recipes Success',\n  props<{ userId: string; recipes: Recipe[] }>()\n);\n\nexport const GetPersonalRecipesFailure = createAction(\n  '[Recipe] Get Personal Recipes Failure',\n  props<{ error: unknown }>()\n);\n\nexport const GetDetailedRecipe = createAction(\n  '[Recipe] Get Detailed Recipe',\n  props<{ id: string }>()\n);\n\nexport const GetDetailedRecipeSuccess = createAction(\n  '[Recipe] Get Detailed Recipe Success',\n  props<{ recipe: Recipe }>()\n);\n\nexport const GetDetailedRecipeFailure = createAction(\n  '[Recipe] Get Detailed Recipe Failure',\n  props<{ error: unknown }>()\n);\n","import { Observable, of } from 'rxjs';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, filter, map, switchMap, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { RECIPE_ADD_ERROR, RECIPE_ADDED } from '../../config/snackbar.config';\nimport { TypedAction } from '@ngrx/store/src/models';\nimport {\n  CreateRecipe,\n  CreateRecipeFailure,\n  CreateRecipeSuccess,\n  GetAllRecipes,\n  GetAllRecipesFailure,\n  GetAllRecipesSuccess,\n  GetDetailedRecipe,\n  GetDetailedRecipeFailure,\n  GetDetailedRecipeSuccess,\n  GetLatestRecipes,\n  GetLatestRecipesFailure,\n  GetLatestRecipesSuccess,\n  GetPersonalRecipes,\n  GetPersonalRecipesFailure,\n  GetPersonalRecipesSuccess,\n} from './recipes.actions';\nimport { Recipe, RecipeEntry } from '../../models/recipes.model';\nimport { RecipesService } from '../../services/recipes.service';\nimport { SnackBarService } from '../../../shared/services/snackbar.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RecipesEffects {\n  constructor(\n    private actions$: Actions,\n    private snackbarService: SnackBarService,\n    private recipesService: RecipesService,\n    private cookieService: CookieService,\n    private router: Router\n  ) {}\n\n  create: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(CreateRecipe),\n      map(({ payload }) => payload),\n      filter(Boolean),\n      switchMap(({ image, ...recipe }: RecipeEntry) => {\n        return this.recipesService.create(recipe, image).pipe(\n          tap(({ id }) => {\n            this.router.navigate(['recipe', id]).then();\n            this.snackbarService.open(RECIPE_ADDED);\n          }),\n          map((recipe: Recipe) => CreateRecipeSuccess({ recipe })),\n          catchError((error) => {\n            this.snackbarService.open(RECIPE_ADD_ERROR);\n            return of(CreateRecipeFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  getAll: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GetAllRecipes),\n      filter(Boolean),\n      switchMap(() => {\n        return this.recipesService.get().pipe(\n          map((recipes: Recipe[]) => GetAllRecipesSuccess({ recipes })),\n          catchError((error) => {\n            return of(GetAllRecipesFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  getLatest: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GetLatestRecipes),\n      filter(Boolean),\n      switchMap(() => {\n        return this.recipesService.get().pipe(\n          map((recipes: Recipe[]) => GetLatestRecipesSuccess({ recipes })),\n          catchError((error) => {\n            return of(GetLatestRecipesFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  getPersonalRecipes: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GetPersonalRecipes),\n      filter(Boolean),\n      switchMap(() => {\n        return this.recipesService.get().pipe(\n          map((recipes: Recipe[]) => {\n            const userId = this.cookieService.get('userId');\n            return GetPersonalRecipesSuccess({ recipes, userId });\n          }),\n          catchError((error) => {\n            return of(GetPersonalRecipesFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n\n  getDetailedRecipe: Observable<TypedAction<string>> = createEffect(() =>\n    this.actions$.pipe(\n      ofType(GetDetailedRecipe),\n      filter(Boolean),\n      map(({ id }) => id),\n      switchMap((id) => {\n        return this.recipesService.findById(id).pipe(\n          map((recipe: Recipe) => GetDetailedRecipeSuccess({ recipe })),\n          catchError((error) => {\n            return of(GetDetailedRecipeFailure({ error: error }));\n          })\n        );\n      })\n    )\n  );\n}\n","import { createReducer, on } from '@ngrx/store';\nimport { Recipe } from '../../models/recipes.model';\nimport {\n  CreateRecipe,\n  CreateRecipeFailure,\n  CreateRecipeSuccess,\n  GetAllRecipes,\n  GetAllRecipesFailure,\n  GetAllRecipesSuccess,\n  GetDetailedRecipeFailure,\n  GetDetailedRecipeSuccess,\n  GetLatestRecipes,\n  GetLatestRecipesFailure,\n  GetLatestRecipesSuccess,\n  GetPersonalRecipes,\n  GetPersonalRecipesFailure,\n  GetPersonalRecipesSuccess,\n} from './recipes.actions';\n\nexport interface RecipeState {\n  myRecipes: Recipe[];\n  allRecipes: Recipe[];\n  errorMessage: string | null;\n  latestRecipes: Recipe[] | null;\n  detailedRecipe: Recipe | null;\n  personalRecipes: Recipe[] | null;\n  recipesProcessing: boolean;\n}\n\nexport const initialState: RecipeState = {\n  myRecipes: [],\n  allRecipes: [],\n  errorMessage: null,\n  latestRecipes: [],\n  detailedRecipe: null,\n  personalRecipes: [],\n  recipesProcessing: false,\n};\n\nconst recipesReducerInternal = createReducer(\n  initialState,\n  on(\n    CreateRecipe,\n    GetAllRecipes,\n    GetLatestRecipes,\n    GetPersonalRecipes,\n    (state) => {\n      return { ...state, recipesProcessing: true };\n    }\n  ),\n  on(CreateRecipeSuccess, (state, { recipe }) => {\n    return { ...state, recipesProcessing: false, detailedRecipe: recipe };\n  }),\n  on(GetAllRecipesSuccess, GetLatestRecipesSuccess, (state, { recipes }) => {\n    const latestRecipes = [...recipes]\n      .sort(\n        (firstRecipe, secondRecipe) =>\n          secondRecipe.createdAt.getTime() - firstRecipe.createdAt.getTime()\n      )\n      .slice(0, 3);\n    return {\n      ...state,\n      recipesProcessing: false,\n      latestRecipes,\n      allRecipes: recipes,\n    };\n  }),\n  on(\n    CreateRecipeFailure,\n    GetAllRecipesFailure,\n    GetLatestRecipesFailure,\n    GetDetailedRecipeFailure,\n    GetPersonalRecipesFailure,\n    (state, { error }) => {\n      return { ...state, errorMessage: error };\n    }\n  ),\n  on(GetPersonalRecipesSuccess, (state, { recipes, userId }) => {\n    const personalRecipes = recipes.filter(({ userId: id }) => id === userId);\n    return {\n      ...state,\n      recipesProcessing: false,\n      personalRecipes,\n    };\n  }),\n  on(GetDetailedRecipeSuccess, (state, { recipe }) => {\n    return {\n      ...state,\n      detailedRecipe: recipe,\n    };\n  })\n);\n\nexport function recipesReducer(state, action) {\n  return recipesReducerInternal(state, action);\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { RecipeState } from './recipes.reducer';\n\nexport const RecipesFeature = createFeatureSelector('recipes');\n\nexport const selectLatestRecipes = createSelector(\n  RecipesFeature,\n  (recipeState: RecipeState) => recipeState,\n  ({ latestRecipes }) => latestRecipes\n);\n\nexport const selectRecipesProcessing = createSelector(\n  RecipesFeature,\n  (recipeState: RecipeState) => recipeState,\n  ({ recipesProcessing }) => recipesProcessing\n);\n\nexport const selectAllRecipes = createSelector(\n  RecipesFeature,\n  (recipeState: RecipeState) => recipeState,\n  ({ allRecipes }) => allRecipes\n);\n\nexport const selectPersonalRecipes = createSelector(\n  RecipesFeature,\n  (recipeState: RecipeState) => recipeState,\n  ({ personalRecipes }) => personalRecipes\n);\n\nexport const selectDetailedRecipes = createSelector(\n  RecipesFeature,\n  (recipeState: RecipeState) => recipeState,\n  ({ detailedRecipe }) => detailedRecipe\n);\n","import { isUndefined } from './is-undefined';\n\nexport const isNotUndefined = <T extends unknown>(value: T): boolean =>\n  !isUndefined(value);\n","import { isUndefined } from './is-undefined';\n\nexport const isNil = <T extends unknown>(value: T): boolean =>\n  isUndefined(value) || value === null;\n","export const isUndefined = <T extends unknown>(value: T): boolean => !value;\n","import { Recipe } from '../models/recipes.model';\nimport { RecipeTile } from '../../shared/components/recipe-tile/recipe-tile.component';\n\nexport const parseToRecipeTiles = ({\n  id,\n  authorName,\n  time,\n  name,\n  photoUrl,\n}: Recipe): RecipeTile => ({ id, authorName, time, name, photoUrl });\n","import { Component, OnInit } from '@angular/core';\nimport { SelectOptions } from '../../shared/components/select/select.component';\nimport {\n  AbstractControl,\n  FormArray,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { RootState } from '../../core/store/root.state';\nimport { Store } from '@ngrx/store';\nimport { CreateRecipe } from '../../core/store/recipes/recipes.actions';\nimport { selectRecipesProcessing } from '../../core/store/recipes/recipes.selectors';\n\n@Component({\n  selector: 'app-add-recipe',\n  templateUrl: './add-recipe.component.html',\n  styleUrls: ['./add-recipe.component.scss'],\n})\nexport class AddRecipeComponent implements OnInit {\n  timeOptions: SelectOptions[] = [\n    { value: '15 mins', displayName: '15 minutes' },\n    { value: '30 mins', displayName: '30 minutes' },\n    { value: '1 hour', displayName: '1 hour' },\n    { value: '2 hours', displayName: '2 hours' },\n  ];\n\n  addRecipeForm: FormGroup;\n\n  createRecipeProcessing$ = this.store.select(selectRecipesProcessing);\n\n  image: File;\n\n  constructor(private fb: FormBuilder, private store: Store<RootState>) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  get preparingSteps(): FormArray {\n    return this.addRecipeForm.controls['preparingSteps'] as FormArray;\n  }\n\n  private initializeForm(): void {\n    this.addRecipeForm = this.fb.group({\n      name: [null, [Validators.required, Validators.maxLength(25)]],\n      time: [null, [Validators.required]],\n      description: [null, [Validators.required, Validators.maxLength(200)]],\n      preparingSteps: this.fb.array([this.createPreparingStepControl()]),\n    });\n  }\n\n  onImageChanged(file: File): void {\n    this.image = file;\n  }\n\n  createPreparingStepControl(): FormControl {\n    return this.fb.control(null, [\n      Validators.required,\n      Validators.maxLength(90),\n    ]);\n  }\n\n  getControlList(abstractControl: AbstractControl): AbstractControl[] {\n    return abstractControl instanceof FormArray ? abstractControl.controls : [];\n  }\n\n  addPreparingStep(): void {\n    this.preparingSteps.push(this.createPreparingStepControl());\n  }\n\n  removeLastPreparingStep(): void {\n    this.preparingSteps.removeAt(this.preparingSteps.length - 1);\n  }\n\n  submit(): void {\n    const payload = {\n      payload: { ...this.addRecipeForm.value, image: this.image },\n    };\n    this.store.dispatch(CreateRecipe(payload));\n  }\n}\n","<app-base-feature-wrapper class='add-recipe'>\n  <div header>Add recipe</div>\n  <form class='add-recipe__form'>\n    <div class='add-recipe__basic-info'>\n      <h3>Basic information</h3>\n      <app-input [control]=\"addRecipeForm.get('name')\">Name</app-input>\n      <app-select [control]=\"addRecipeForm.get('time')\" [options]='timeOptions'>Time</app-select>\n      <app-text-area [control]=\"addRecipeForm.get('description')\" >Description</app-text-area>\n    </div>\n    <div class='add-recipe__image-upload'>\n      <h3>Image upload</h3>\n      <app-image-upload (fileEmitter)='onImageChanged($event)'></app-image-upload>\n    </div>\n    <div class='add-recipe__preparing-steps' *ngIf='preparingSteps'>\n      <h3>Preparing steps</h3>\n      <div class='add-recipe__preparing-step' *ngFor='let preparingStep of getControlList(preparingSteps); let i=index'>\n        <p>{{i + 1}}.</p>\n        <app-input [control]='preparingStep'>Step</app-input>\n      </div>\n      <app-button [isFullWidth]='true' (onClick)='addPreparingStep()'>Add preparing step</app-button>\n      <app-button *ngIf='preparingSteps.length > 1' [isFullWidth]='true' [secondary]='true' (onClick)='removeLastPreparingStep()'>Remove preparing step</app-button>\n    </div>\n    <div class='add-recipe__submit'>\n      <app-button [isProcessing]='createRecipeProcessing$ | async' [isDisabled]='this.addRecipeForm.invalid || !image' (onClick)='submit()'>Submit</app-button>\n    </div>\n  </form>\n  <ng-adsense [adtest]='\"on\"'></ng-adsense>\n  <ng-adsense\n    [adClient]=\"'pub-3777768585143098'\"\n    [adSlot]='3122538287'\n    [display]=\"'block'\"\n    [width]='320'\n    [height]='108'></ng-adsense>\n</app-base-feature-wrapper>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { RootState } from '../../../core/store/root.state';\nimport { SignIn } from '../../../core/store/auth/auth.actions';\nimport { Observable } from 'rxjs';\nimport { AuthState } from '../../../core/store/auth/auth.reducer';\nimport { selectAuthState } from '../../../core/store/auth/auth.selectors';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { filter, tap } from 'rxjs/operators';\nimport { SnackBarService } from '../../../shared/services/snackbar.service';\nimport { Router } from '@angular/router';\nimport { LOGGED } from '../../../core/config/snackbar.config';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n  signInForm: FormGroup;\n\n  authState$: Observable<AuthState> = this.store\n    .select(selectAuthState)\n    .pipe(untilDestroyed(this));\n\n  isProcessing = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<RootState>,\n    private snackbarService: SnackBarService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.initializeAuthSubscription();\n  }\n\n  private initializeForm(): void {\n    this.signInForm = this.fb.group(\n      {\n        email: [null, [Validators.required, Validators.email]],\n        password: [null, [Validators.required, Validators.minLength(4)]],\n      },\n      { updateOn: 'blur' }\n    );\n  }\n\n  private initializeAuthSubscription(): void {\n    this.authState$\n      .pipe(\n        tap(({ authProcessing }) => (this.isProcessing = authProcessing)),\n        tap(() => this.signInForm.reset()),\n        filter(({ isAuthenticated }) => Boolean(isAuthenticated))\n      )\n      .subscribe(() => {\n        this.snackbarService.open(LOGGED);\n        this.router.navigateByUrl('').then();\n      });\n  }\n\n  handleLogin(): void {\n    const payload = { payload: this.signInForm.value };\n    this.store.dispatch(SignIn(payload));\n  }\n}\n","<div class='sign-in'>\n  <app-card>\n    <div header>Sign In</div>\n    <div [formGroup]='signInForm' class='sign-in__body'>\n      <app-input [control]=\"signInForm.get('email')\">E-mail</app-input>\n      <app-input [control]=\"signInForm.get('password')\" type='password'>Password</app-input>\n      <app-button [isProcessing]='isProcessing' [isDisabled]='signInForm.invalid' (onClick)='handleLogin()' isFullWidth='true'>Login</app-button>\n    </div>\n  </app-card>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { AuthState } from '../../../core/store/auth/auth.reducer';\nimport { selectAuthState } from '../../../core/store/auth/auth.selectors';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { Store } from '@ngrx/store';\nimport { RootState } from '../../../core/store/root.state';\nimport { SnackBarService } from '../../../shared/services/snackbar.service';\nimport { Router } from '@angular/router';\nimport { filter, tap } from 'rxjs/operators';\nimport { REGISTERED } from '../../../core/config/snackbar.config';\nimport { Register } from '../../../core/store/auth/auth.actions';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit {\n  signUpForm: FormGroup;\n\n  authState$: Observable<AuthState> = this.store\n    .select(selectAuthState)\n    .pipe(untilDestroyed(this));\n\n  isProcessing = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private store: Store<RootState>,\n    private snackbarService: SnackBarService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.initializeAuthSubscription();\n  }\n\n  private initializeForm(): void {\n    this.signUpForm = this.fb.group(\n      {\n        displayName: [\n          null,\n          [\n            Validators.required,\n            Validators.pattern('[A-Za-z]*'),\n            Validators.minLength(3),\n          ],\n        ],\n        email: [\n          null,\n          [Validators.required, Validators.email, Validators.minLength(4)],\n        ],\n        password: [null, [Validators.required, Validators.minLength(4)]],\n      },\n      { updateOn: 'blur' }\n    );\n  }\n\n  private initializeAuthSubscription(): void {\n    this.authState$\n      .pipe(\n        tap(({ authProcessing }) => (this.isProcessing = authProcessing)),\n        filter(({ isAuthenticated }) => Boolean(isAuthenticated))\n      )\n      .subscribe(() => {\n        this.snackbarService.open(REGISTERED);\n        this.router.navigateByUrl('').then();\n      });\n  }\n\n  handleRegistration(): void {\n    const payload = { payload: this.signUpForm.value };\n    this.store.dispatch(Register(payload));\n  }\n}\n","<div class='sign-up'>\n  <app-card>\n    <div header>Sign Up</div>\n    <div class='sign-up__body'>\n      <app-input [control]=\"signUpForm.get('displayName')\">Name</app-input>\n      <app-input [control]=\"signUpForm.get('email')\">E-mail</app-input>\n      <app-input type='password' [control]=\"signUpForm.get('password')\">Password</app-input>\n      <app-button [isProcessing]='isProcessing' [isDisabled]='signUpForm.invalid' isFullWidth='true' (onClick)='handleRegistration()'>Register</app-button>\n    </div>\n  </app-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AddRecipeComponent } from './add-recipe/add-recipe.component';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { PersonalRecipesComponent } from './personal-recipes/personal-recipes.component';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { RecipeDetailsComponent } from './recipe-details/recipe-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'add-recipe',\n    component: AddRecipeComponent,\n  },\n  {\n    path: 'sign-in',\n    component: SignInComponent,\n  },\n  {\n    path: 'sign-up',\n    component: SignUpComponent,\n  },\n  {\n    path: 'my-recipes',\n    component: PersonalRecipesComponent,\n  },\n  {\n    path: 'recipes',\n    component: RecipeListComponent,\n  },\n  {\n    path: 'recipe/:id',\n    component: RecipeDetailsComponent,\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeaturesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { PersonalRecipesComponent } from './personal-recipes/personal-recipes.component';\nimport { RecipeDetailsComponent } from './recipe-details/recipe-details.component';\nimport { AddRecipeComponent } from './add-recipe/add-recipe.component';\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\nimport { HomeComponent } from './home/home.component';\nimport { FeaturesRoutingModule } from './features-routing.module';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { CoreModule } from '../core/core.module';\nimport { Store, StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { appEffects, appReducer } from '../core/store';\nimport { CookieService } from 'ngx-cookie-service';\nimport { RootState } from '../core/store/root.state';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptorService } from '../core/interceptors/auth-interceptor.service';\nimport { TokenValidation } from '../core/store/auth/auth.actions';\nimport { RecipeImageComponent } from './recipe-details/recipe-image/recipe-image.component';\nimport { isNotUndefined } from '../core/utility/is-not-undefined';\nimport { AdsenseModule } from 'ng2-adsense';\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    RecipeListComponent,\n    AddRecipeComponent,\n    RecipeDetailsComponent,\n    PersonalRecipesComponent,\n    SignInComponent,\n    SignUpComponent,\n    RecipeImageComponent,\n  ],\n  imports: [\n    StoreModule.forRoot(appReducer),\n    StoreModule.forFeature('recipes', appReducer.recipe),\n    EffectsModule.forRoot(appEffects),\n    AdsenseModule.forRoot({\n      adClient: 'ca-pub-7640562161899788',\n      adSlot: 2930227358,\n      adtest: 'on',\n    }),\n    SharedModule,\n    CoreModule,\n    FeaturesRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class FeaturesModule {\n  constructor(\n    private cookieService: CookieService,\n    private store: Store<RootState>\n  ) {\n    const token = cookieService.get('token');\n\n    if (isNotUndefined(token)) {\n      this.store.dispatch(TokenValidation());\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { RootState } from '../../core/store/root.state';\nimport { RecipeTile } from '../../shared/components/recipe-tile/recipe-tile.component';\nimport { Observable } from 'rxjs';\nimport { selectLatestRecipes } from '../../core/store/recipes/recipes.selectors';\nimport { GetLatestRecipes } from '../../core/store/recipes/recipes.actions';\nimport { Recipe } from '../../core/models/recipes.model';\nimport { filter, map } from 'rxjs/operators';\nimport { parseToRecipeTiles } from '../../core/utility/parse-to-recipe-tiles';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  latestRecipes$: Observable<RecipeTile[]> = this.store\n    .select(selectLatestRecipes)\n    .pipe(\n      filter(Boolean),\n      map((recipes: Recipe[]) =>\n        recipes.map((recipe) => parseToRecipeTiles(recipe))\n      )\n    );\n\n  constructor(private store: Store<RootState>) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(GetLatestRecipes());\n  }\n}\n","<app-base-feature-wrapper class='home'>\n  <div header>Latest recipes</div>\n  <div class='home__recipes' *ngIf='(latestRecipes$ | async) as latestRecipes'>\n    <app-recipe-tile *ngFor='let recipe of latestRecipes' [recipeTile]='recipe'></app-recipe-tile>\n  </div>\n  sasasa\n  <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3777768585143098\"\n     crossorigin=\"anonymous\"></script>\n<!-- test2 -->\n<ins class=\"adsbygoogle\"\n     style=\"display:block\"\n     data-ad-client=\"ca-pub-3777768585143098\"\n     data-ad-slot=\"4670924554\"\n     data-ad-format=\"auto\"\n     data-full-width-responsive=\"true\"></ins>\n<script>\n     (adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n  <ng-adsense [adtest]='\"on\"'></ng-adsense>\n    <ng-adsense\n    [adClient]=\"'pub-3777768585143098'\"\n    [adSlot]='3122538287'\n    [display]=\"'block'\"\n    [width]='320'\n    [height]='108'></ng-adsense>\n</app-base-feature-wrapper>\n","<app-base-feature-wrapper class='personal-recipes'>\n  <div header>My Recipes</div>\n  <div class='personal-recipes__list' *ngIf='(recipes$ | async) as latestRecipes'>\n    <app-recipe-tile *ngFor='let recipe of latestRecipes' [recipeTile]='recipe'></app-recipe-tile>\n  </div>\n</app-base-feature-wrapper>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RecipeTile } from '../../shared/components/recipe-tile/recipe-tile.component';\nimport { selectPersonalRecipes } from '../../core/store/recipes/recipes.selectors';\nimport { filter, map } from 'rxjs/operators';\nimport { Recipe } from '../../core/models/recipes.model';\nimport { parseToRecipeTiles } from '../../core/utility/parse-to-recipe-tiles';\nimport { Store } from '@ngrx/store';\nimport { RootState } from '../../core/store/root.state';\nimport { GetPersonalRecipes } from '../../core/store/recipes/recipes.actions';\n\n@Component({\n  selector: 'app-personal-recipes',\n  templateUrl: './personal-recipes.component.html',\n  styleUrls: ['./personal-recipes.component.scss'],\n})\nexport class PersonalRecipesComponent implements OnInit {\n  recipes$: Observable<RecipeTile[]> = this.store\n    .select(selectPersonalRecipes)\n    .pipe(\n      filter(Boolean),\n      map((recipes: Recipe[]) =>\n        recipes.map((recipe) => {\n          const { authorName, ...recipeWithoutAuthorName } =\n            parseToRecipeTiles(recipe);\n          return recipeWithoutAuthorName;\n        })\n      )\n    );\n  constructor(private store: Store<RootState>) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(GetPersonalRecipes());\n  }\n}\n","<app-base-feature-wrapper class='recipe-details'>\n  <div header>Detailed Recipe</div>\n  <div *ngIf='(recipe$ | async) as recipe' class='recipe-details__content'>\n    <app-recipe-image [authorName]='recipe.authorName' [name]='recipe.name' [time]='recipe.time'\n                      [photoUrl]='recipe.photoUrl'></app-recipe-image>\n\n    <p class='recipe-details__created-at'>Created at {{recipe.createdAt | date: 'd/M/yy, HH:MM' }}</p>\n\n    <div class='recipe-details__description'>{{recipe.description}}</div>\n\n    <div class='recipe-details__preparing-steps'>\n      <ng-container *ngIf='recipe.preparingSteps.length > 0; else noPreparingSteps'>\n        <h2>Preparing steps</h2>\n        <div *ngFor='let preparingStep of recipe.preparingSteps; let i = index' class='recipe-details__preparing-step'>\n          <h4>{{i + 1}}.</h4>\n          <div>{{preparingStep}}</div>\n        </div>\n      </ng-container>\n\n      <ng-template #noPreparingSteps>\n        <h2>No preparing steps</h2>\n      </ng-template>\n    </div>\n  </div>\n</app-base-feature-wrapper>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { RootState } from '../../core/store/root.state';\nimport { Store } from '@ngrx/store';\nimport { GetDetailedRecipe } from '../../core/store/recipes/recipes.actions';\nimport { selectDetailedRecipes } from '../../core/store/recipes/recipes.selectors';\nimport { Observable } from 'rxjs';\nimport { Recipe } from '../../core/models/recipes.model';\nimport { map } from 'rxjs/operators';\nimport { isNil } from '../../core/utility/is-null-or-undefined';\n\n@UntilDestroy()\n@Component({\n  selector: 'app-recipe-details',\n  templateUrl: './recipe-details.component.html',\n  styleUrls: ['./recipe-details.component.scss'],\n})\nexport class RecipeDetailsComponent implements OnInit {\n  recipe$: Observable<Recipe> = this.store.select(selectDetailedRecipes).pipe(\n    map((recipe: Recipe) => ({\n      ...recipe,\n      preparingSteps: RecipeDetailsComponent.parsePreparingSteps(\n        recipe?.preparingSteps\n      ),\n    }))\n  );\n\n  constructor(\n    private store: Store<RootState>,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.activatedRoute.params\n      .pipe(untilDestroyed(this))\n      .subscribe(({ id }) => this.store.dispatch(GetDetailedRecipe({ id })));\n  }\n\n  private static parsePreparingSteps(\n    value: string[] | string | undefined\n  ): string[] {\n    return isNil(value) || typeof value === 'string' ? [] : value;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-image',\n  templateUrl: './recipe-image.component.html',\n  styleUrls: ['./recipe-image.component.scss'],\n})\nexport class RecipeImageComponent {\n  @Input() name: string;\n\n  @Input() photoUrl: string;\n\n  @Input() time: string;\n\n  @Input() authorName: string;\n}\n","    <div class='recipe-image'>\n      <div class='recipe-image__info'>\n        <p class='recipe-image__time'>{{time}}</p>\n        <p class='recipe-image__name'>{{name}}</p>\n        <p class='recipe-image__author-name'>{{authorName}}</p>\n\n      </div>\n      <img [src]='photoUrl' alt='Recipe image' />\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RecipeTile } from '../../shared/components/recipe-tile/recipe-tile.component';\nimport { selectAllRecipes } from '../../core/store/recipes/recipes.selectors';\nimport { filter, map } from 'rxjs/operators';\nimport { Recipe } from '../../core/models/recipes.model';\nimport { parseToRecipeTiles } from '../../core/utility/parse-to-recipe-tiles';\nimport { Store } from '@ngrx/store';\nimport { RootState } from '../../core/store/root.state';\nimport { GetAllRecipes } from '../../core/store/recipes/recipes.actions';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.scss'],\n})\nexport class RecipeListComponent implements OnInit {\n  recipes$: Observable<RecipeTile[]> = this.store.select(selectAllRecipes).pipe(\n    filter(Boolean),\n    map((recipes: Recipe[]) =>\n      recipes.map((recipe) => parseToRecipeTiles(recipe))\n    )\n  );\n  constructor(private store: Store<RootState>) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(GetAllRecipes());\n  }\n}\n","<app-base-feature-wrapper class='recipes'>\n  <div header>Recipes</div>\n  <div class='recipes__list' *ngIf='(recipes$ | async) as latestRecipes'>\n    <app-recipe-tile *ngFor='let recipe of latestRecipes' [recipeTile]='recipe'></app-recipe-tile>\n  </div>\n</app-base-feature-wrapper>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-adblock-notification-dialog',\n  templateUrl: './adblock-notification-dialog.component.html',\n  styleUrls: ['./adblock-notification-dialog.component.scss'],\n})\nexport class AdblockNotificationDialogComponent {}\n","<div class='adblock-notification'>\n  <mat-icon class='adblock-notification__icon'>error</mat-icon>\n  <h1 class='adblock-notification__title'>Adblock detected</h1>\n  <div class='adblock-notification__content'>\n    Please disable adblock to be able to move around the page\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-base-feature-wrapper',\n  templateUrl: './base-feature-wrapper.component.html',\n  styleUrls: ['./base-feature-wrapper.component.scss'],\n})\nexport class BaseFeatureWrapperComponent {}\n","<div class='base-feature'>\n  <div class='base-feature__header'><ng-content select='[header]'></ng-content></div>\n  <ng-content></ng-content>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n})\nexport class ButtonComponent {\n  @Input() type: string = 'button';\n\n  @Input() isFullWidth;\n\n  @Input() isProcessing: boolean = false;\n\n  @Input() isDisabled: boolean = false;\n\n  @Input() secondary: boolean = false;\n\n  @Output() onClick = new EventEmitter<boolean>();\n\n  clicked() {\n    this.onClick.emit(true);\n  }\n}\n","  <button class='button' [ngClass]='secondary ? \"secondary\" : \"primary\"'\n          [ngStyle]=\"{'width': isFullWidth ? '100%' : '120px'}\" mat-raised-button [type]='type'\n          [disabled]='isProcessing || isDisabled' (click)='clicked()'>\n    <ng-content *ngIf='!isProcessing; else loading'></ng-content>\n    <ng-template #loading>\n      <mat-spinner></mat-spinner>\n    </ng-template>\n  </button>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {}\n","<div class='card'>\n  <header class='card__header'>\n    <h4>\n      <ng-content select='[header]'></ng-content>\n    </h4>\n  </header>\n  <div class='card__body'>\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { RootState } from '../../../core/store/root.state';\nimport { Observable } from 'rxjs';\nimport {\n  selectAuthProcessing,\n  selectUser,\n} from '../../../core/store/auth/auth.selectors';\nimport { Router } from '@angular/router';\nimport { User } from '../../../core/models/user.model';\nimport { Logout } from '../../../core/store/auth/auth.actions';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  user$: Observable<User> = this.store.select(selectUser);\n\n  authProcessing$: Observable<Boolean> =\n    this.store.select(selectAuthProcessing);\n\n  constructor(private store: Store<RootState>, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  goToLogin(): void {\n    this.router.navigateByUrl('sign-in').then();\n  }\n\n  goToRegister(): void {\n    this.router.navigateByUrl('sign-up').then();\n  }\n\n  logout(): void {\n    this.router.navigateByUrl('').then();\n    this.store.dispatch(Logout());\n  }\n}\n","<div class='header'>\r\n  <div class='header__logo'>\r\n    <mat-icon routerLink=''>menu_book</mat-icon>\r\n  </div>\r\n  <section [ngStyle]=\"{'opacity': (authProcessing$ | async) ? '0' : '1'}\" class='header__body'>\r\n    <ng-container *ngIf='(user$ | async) as user; else unauthenticated'>\r\n      <div class='header__inner-body'>\r\n        <div class='links'>\r\n          <a routerLink='add-recipe'>Add recipe</a>\r\n          <a routerLink='my-recipes'>My recipes</a>\r\n          <a routerLink='recipes'>Recipes</a>\r\n        </div>\r\n        <div class='actions'>\r\n          <p class='actions__user-display-name'>{{user.displayName}}</p>\r\n          <app-button (click)='logout()' secondary='true'>\r\n            Logout\r\n          </app-button>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n    <ng-template #unauthenticated>\r\n      <div class='auth-actions'>\r\n        <app-button (click)='goToLogin()'>\r\n          Login\r\n        </app-button>\r\n        <app-button (click)='goToRegister()' secondary='true'>\r\n          Register\r\n        </app-button>\r\n      </div>\r\n    </ng-template>\r\n  </section>\r\n  <div class='mobile-icon' [ngStyle]=\"{'opacity': (authProcessing$ | async) ? '0' : '1'}\">\r\n    <mat-icon>menu</mat-icon>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { isUndefined } from '../../../core/utility/is-undefined';\n\n@Component({\n  selector: 'app-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.scss'],\n})\nexport class ImageUploadComponent {\n  fileName = '';\n\n  file: File;\n\n  imageSrc;\n\n  @Output() fileEmitter = new EventEmitter<File>();\n\n  onImageSelected(event) {\n    const file = event.target.files[0];\n\n    if (isUndefined(file)) {\n      return;\n    }\n    this.fileEmitter.emit(file);\n    this.file = file;\n    const reader = new FileReader();\n    reader.readAsDataURL(this.file);\n    reader.onload = () => (this.imageSrc = reader.result);\n    this.fileName = this.file.name;\n  }\n}\n","<div class='image-upload'>\n  <app-button (onClick)='fileUpload.click()'>\n    Upload\n    <input type='file' class='image-upload__input'\n           (change)='onImageSelected($event)' #fileUpload>\n  </app-button>\n\n  <div class='image-upload__info'>\n    <p class='image-upload__file-name'>{{fileName || \"No image uploaded yet.\"}}</p>\n    <div *ngIf='file' class='image-upload__file'>\n      <img [src]='imageSrc'  alt='Uploaded image'/>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent {\n  @Input() control: FormControl | AbstractControl = new FormControl('');\n\n  @Input() set type(value) {\n    this._type = value;\n    this.hide = value === 'password';\n  }\n\n  @Output() onEnter = new EventEmitter<void>();\n\n  _type: string = 'text';\n\n  hide = false;\n\n  constructor() {}\n\n  onKeyup() {\n    this.onEnter.emit();\n  }\n}\n","<mat-form-field appearance='fill'>\n  <mat-label>\n    <ng-content></ng-content>\n  </mat-label>\n  <input [type]=\"hide ? 'password' : 'text'\" matInput (keyup.enter)='onKeyup()' [formControl]='control'>\n  <button *ngIf='_type === \"password\"' mat-icon-button matSuffix (click)='hide = !hide'\n          [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]='hide'>\n    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n  </button>\n  <app-validation-feedback *ngIf='control.touched' [control]='control'></app-validation-feedback>\n</mat-form-field>\n","import { Component, HostListener, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nexport interface RecipeTile {\n  id: string;\n  authorName?: string;\n  time: string;\n  name: string;\n  photoUrl: string;\n}\n\n@Component({\n  selector: 'app-recipe-tile',\n  templateUrl: './recipe-tile.component.html',\n  styleUrls: ['./recipe-tile.component.scss'],\n})\nexport class RecipeTileComponent {\n  @Input() recipeTile: RecipeTile;\n\n  @HostListener('click', ['$event'])\n  goToDetails(): void {\n    this.router.navigate(['recipe', this.recipeTile.id]).then();\n  }\n\n  constructor(private router: Router) {}\n}\n","<div class='recipe-tile'>\n  <div class='recipe-tile__information'>\n    <p class='recipe-tile__time'>{{recipeTile.time}}</p>\n    <p class='recipe-tile__name'>{{recipeTile.name}}</p>\n    <p *ngIf='recipeTile.authorName' class='recipe-tile__author'>{{recipeTile.authorName}}</p>\n  </div>\n  <img [src]='recipeTile.photoUrl' alt='Recipe image' />\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\nexport interface SelectOptions {\n  displayName: string;\n  value: string;\n}\n\n@Component({\n  selector: 'app-select',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.scss'],\n})\nexport class SelectComponent {\n  @Input() control: FormControl | AbstractControl = new FormControl('');\n\n  @Input() options: SelectOptions[] = [];\n\n  @Input() isDisabled: boolean = false;\n}\n","<mat-form-field appearance='fill' class='select'>\n  <mat-label>\n    <ng-content></ng-content>\n  </mat-label>\n  <mat-select [formControl]='control' [disabled]=\"isDisabled\">\n    <mat-option *ngFor='let option of options' [value]=\"option.value\">{{option.displayName}}</mat-option>\n  </mat-select>\n  <app-validation-feedback *ngIf='control.touched' [control]='control'></app-validation-feedback>\n</mat-form-field>\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.scss'],\n})\nexport class TextAreaComponent {\n  @Input() control: FormControl | AbstractControl = new FormControl('');\n\n  @Input() rows = 5;\n}\n","<mat-form-field appearance='fill'>\n  <mat-label>\n    <ng-content></ng-content>\n  </mat-label>\n  <textarea [formControl]='control' matInput [rows]='rows'></textarea>\n  <app-validation-feedback *ngIf='control.touched' [control]='control'></app-validation-feedback>\n</mat-form-field>\n","import { Component, Input } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { VALIDATION_CONFIG } from '../../../core/config/validation.config';\n\n@Component({\n  selector: 'app-validation-feedback',\n  template: ` <div class=\"error\">\n    {{ errorMessage }}\n  </div>`,\n  styleUrls: ['./validation-feedback.component.scss'],\n})\nexport class ValidationFeedbackComponent {\n  config = VALIDATION_CONFIG;\n\n  @Input() control: AbstractControl;\n\n  get errorMessage() {\n    for (const property in this.control.errors) {\n      if (\n        this.control.errors.hasOwnProperty(property) &&\n        property in this.config\n      ) {\n        return this.config[property];\n      }\n    }\n    return null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatMenuModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n  MatTableModule,\n  MatSnackBarModule,\n  MatRippleModule,\n  MatIconModule,\n  MatSelectModule,\n  MatDialogModule,\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents],\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SnackBarService {\n  constructor(private snackBar: MatSnackBar) {}\n\n  open({ message, action = 'X', type }, duration = 1250) {\n    this.snackBar.open(message, action, {\n      duration,\n      horizontalPosition: 'end',\n      verticalPosition: 'bottom',\n      panelClass: type === 'Error' ? 'snackBar-error' : 'snackBar-success',\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { MaterialModule } from './material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ButtonComponent } from './components/button/button.component';\nimport { InputComponent } from './components/input/input.component';\nimport { RecipeTileComponent } from './components/recipe-tile/recipe-tile.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { TextAreaComponent } from './components/text-area/text-area.component';\nimport { CardComponent } from './components/card/card.component';\nimport { SelectComponent } from './components/select/select.component';\nimport { CommonModule } from '@angular/common';\nimport { ValidationFeedbackComponent } from './components/validation-feedback/validation-feedback.component';\nimport { SnackBarService } from './services/snackbar.service';\nimport { RouterModule } from '@angular/router';\nimport { BaseFeatureWrapperComponent } from './components/base-feature-wrapper/base-feature-wrapper.component';\nimport { ImageUploadComponent } from './components/image-upload/image-upload.component';\nimport { AdblockNotificationDialogComponent } from './components/adblock-notification-dialog/adblock-notification-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule,\n  ],\n  declarations: [\n    ButtonComponent,\n    InputComponent,\n    RecipeTileComponent,\n    HeaderComponent,\n    TextAreaComponent,\n    CardComponent,\n    SelectComponent,\n    ValidationFeedbackComponent,\n    BaseFeatureWrapperComponent,\n    ImageUploadComponent,\n    AdblockNotificationDialogComponent,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ButtonComponent,\n    InputComponent,\n    HeaderComponent,\n    TextAreaComponent,\n    CardComponent,\n    SelectComponent,\n    ValidationFeedbackComponent,\n    RecipeTileComponent,\n    CommonModule,\n    RouterModule,\n    BaseFeatureWrapperComponent,\n    ImageUploadComponent,\n  ],\n  providers: [SnackBarService],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true,\n  API_URL: 'http://localhost:3000/api/',\n  ad_client: 'ca-pub-3777768585143098',\n  ad_slot: 3122538287,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}